{"version":3,"sources":["mealdb-api.js","pages/Home.js","components/RecipeIngredients.js","components/RecipeInstructions.js","pages/Recipe.js","pages/Timer.js","App.js","registerServiceWorker.js","index.js"],"names":["baseUrl","getLatest","getRecipe","a","fetch","request","json","data","recipes","meals","map","m","normalizeMeal","recipeId","recipe","shift","meal","newMeal","id","idMeal","name","strMeal","category","strCategory","origin","strArea","instructions","strInstructions","split","filter","i","trim","thumbnail","strMealThumb","tags","strTags","youtube","strYoutube","ingredients","url","strSource","dateModified","push","ingredient","measure","Home","props","state","isLoading","mealdb","console","error","this","setState","className","Helmet","Link","to","key","style","backgroundImage","React","Component","RecipeIngredients","ix","RecipeInstructions","line","Recipe","share","e","preventDefault","navigator","alert","title","text","summary","then","log","catch","match","params","onClick","Timer","start","timer","timeLeft","countdownInterval","setInterval","clearInterval","showNotification","handleChange","target","value","type","min","max","step","onChange","history","createBrowserHistory","ReactGA","initialize","pageview","window","location","pathname","search","listen","App","Router","Route","exact","path","component","isLocalhost","Boolean","hostname","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","document","getElementById","URL","process","addEventListener","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.62c6aec8.chunk.js","sourcesContent":["import 'isomorphic-fetch'\n\nconst baseUrl = 'https://www.themealdb.com/api/json/v1/1'\n\nexport default {\n  getLatest,\n  getRecipe\n}\n\nasync function getLatest() {\n  const request = await fetch(`${baseUrl}/search.php?f=b`);\n  const data = await request.json()\n  const recipes = data.meals.map((m) => normalizeMeal(m))\n\n  return recipes\n}\n\nasync function getRecipe(recipeId) {\n  const request = await fetch(`${baseUrl}/lookup.php?i=${recipeId}`)\n  const data = await request.json()\n  if( ! data.meals ) return null\n  const recipe = normalizeMeal(data.meals.shift())\n\n  return recipe\n}\n\nfunction normalizeMeal(meal) {\n  const newMeal = {}\n\n  newMeal.id = meal.idMeal\n  newMeal.name = meal.strMeal\n  newMeal.category = meal.strCategory\n  newMeal.origin = meal.strArea\n  newMeal.instructions = meal.strInstructions.split('\\n').filter((i) => i.trim() !== '')\n  newMeal.thumbnail = meal.strMealThumb\n  newMeal.tags = meal.strTags ? meal.strTags.split(',') : []\n  newMeal.youtube = meal.strYoutube\n  newMeal.ingredients = []\n  newMeal.url = meal.strSource\n  newMeal.dateModified = meal.dateModified\n\n  for( let i=1; i<=20; i++ ) {\n    if( meal[`strIngredient${i}`] !== '' && meal[`strMeasure${i}`] !== '' ) {\n      newMeal.ingredients.push({\n        ingredient: meal[`strIngredient${i}`],\n        measure: meal[`strMeasure${i}`]\n      })\n    }\n  }\n\n  return newMeal\n}\n\n\n","import React from 'react'\nimport { Link } from \"react-router-dom\"\nimport { Helmet } from 'react-helmet'\nimport mealdb from '../mealdb-api'\n\nexport default class Home extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = { recipes: null, isLoading: true }\n  }\n\n  async componentDidMount() {\n    var recipes\n    try {\n      recipes = await mealdb.getLatest()\n    } catch(e) { console.error(e); recipes = null }\n    this.setState({ recipes, isLoading: false })\n  }\n\n  render() {\n    const { recipes, isLoading } = this.state\n\n    if( isLoading ) {\n      return <div className=\"message\">Cargando...</div>\n    }\n\n    return <div>\n      <Helmet>\n        <title>Recetas</title>\n      </Helmet>\n\n      <div className=\"recipes\">\n        { recipes && recipes.map((recipe) => (\n          <Link to={`/recipe/${recipe.id}`} className=\"recipe\" key={recipe.id}>\n            <span className=\"bg\" style={ { backgroundImage: `url(${recipe.thumbnail})` } }></span>\n            <span className=\"info\">\n              <h2>{ recipe.name }</h2>\n            </span>\n          </Link>\n        )) }\n      </div>\n    </div>\n  }\n\n}","import React from 'react'\n\nexport default class RecipeIngredients extends React.Component {\n\n  render() {\n    const { ingredients } = this.props\n    \n    return <div className=\"ingredients\">\n      <h2>Ingredients</h2>\n      <ul>\n        { ingredients.map((i, ix) => (\n          <li key={ix}>{ i.ingredient }: { i.measure }</li>\n        )) }\n      </ul>\n    </div>\n  }\n\n}","import React from 'react'\n\nexport default class RecipeInstructions extends React.Component {\n\n  render() {\n    const { instructions } = this.props\n    \n    return <div className=\"instructions\">\n      <h2>Instructions</h2>\n\n      <div className=\"steps\">\n        { instructions.map((line, ix) => (\n          <div className=\"step\" key={ix}>\n            <div className=\"number\">{ix+1}</div>\n            <div className=\"text\">{ line }</div>\n          </div>\n        )) }\n      </div>\n    </div>\n  }\n\n}","import React from 'react';\nimport { Helmet } from 'react-helmet'\nimport mealdb from '../mealdb-api'\nimport RecipeIngredients from '../components/RecipeIngredients'\nimport RecipeInstructions from '../components/RecipeInstructions'\n\nexport default class Recipe extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = { recipe: null, isLoading: true }\n  }\n\n  async componentDidMount() {\n    var recipe = null\n    try {\n      recipe = await mealdb.getRecipe(this.props.match.params.recipeId)\n    } catch(e) {\n      recipe = null\n    }\n    this.setState({ recipe, isLoading: false })\n  }\n\n  share = (e) => {\n    e.preventDefault()\n    if (! navigator.share) {\n      alert('Tu navegador no soporta compartir');\n      return null;\n    }\n    const { recipe } = this.state\n    navigator.share({\n      title: recipe.name,\n      text: recipe.summary,\n      url: `https://www.mealdb.com/recipe/${recipe.id}`\n    })\n\n    .then(() => console.log('Successful share'))\n    .catch((error) => console.log('Error sharing', error));\n  }\n\n\n  render() {\n    const { recipe, isLoading } = this.state\n\n    if( isLoading ) {\n      return <div className=\"message\">Cargando...</div>\n    }\n    else if( recipe === null ) {\n      return <div className=\"message\">Hubo un problema :(</div>\n    }\n\n    return <div className=\"Recipe\">\n      <Helmet>\n        <title>{ recipe.name }</title>\n      </Helmet>\n\n      <div className=\"hero\" style={{ backgroundImage: `url(${recipe.thumbnail})` }} />\n      \n      <div className=\"title\">\n        <div className=\"info\">\n          <h1>{ recipe.name }</h1>\n          <p>{ recipe.origin }</p>\n\n          <a onClick={ this.share}>Compartir</a>\n        </div>\n        <div>\n        </div>\n      </div>\n\n\n      <RecipeIngredients ingredients={ recipe.ingredients } />\n\n      <RecipeInstructions instructions={ recipe.instructions } />\n\n    </div>\n  }\n\n}","import React from 'react'\n\nexport default class Timer extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = { timer: 3, timeLeft: 0 }\n  }\n\n  start = async () => {\n    // TODO: Chequear permisos\n\n    var timer = this.state.timer\n    this.setState({ timeLeft: timer })\n\n    var countdownInterval = setInterval(() => {\n      timer = timer - 1;\n      this.setState({ timeLeft: timer }) \n      if( timer <= 0 ) { \n        clearInterval(countdownInterval) \n        this.showNotification()\n      }\n    }, 1000)\n  }\n\n  showNotification = async () => {\n    // TODO: Enviar Notificación\n  }\n\n  handleChange = (e) => {\n    this.setState({timer: e.target.value})\n  }\n\n  render () {\n    const { timer, timeLeft } = this.state\n\n    return <div className=\"Timer\">\n      <div className=\"name\">Timer</div>\n      { timeLeft === 0 ? \n        <div className=\"center\">\n          <input type=\"number\" min=\"0\" max=\"999\" step=\"1\" value={timer} onChange={this.handleChange} />\n          <button onClick={ this.start }>Start</button>\n        </div>\n      :\n        <div className=\"timeLeft\">{ timeLeft }s</div>\n      }\n    </div>\n  }\n}\n","import React from 'react'\nimport { Router, Route, Link } from \"react-router-dom\"\nimport Home from './pages/Home'\nimport Recipe from './pages/Recipe'\nimport Timer from './pages/Timer'\nimport './App.css'\nimport {createBrowserHistory} from 'history';\nimport ReactGA from 'react-ga';\n\nconst history = createBrowserHistory();\n\nReactGA.initialize('UA-000000-01');\nReactGA.pageview(window.location.pathname + window.location.search);;  \n\n\nhistory.listen(location => {\n  ReactGA.pageview(window.location.pathname + window.location.search);;  \n})\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <Router history={history}>\n        <div>\n          <header>\n            <Link to=\"/\">Recetas</Link>\n          </header>\n\n          <main>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/recipe/:recipeId\" component={Recipe} />\n            <Route path=\"/timer\" component={Timer} />\n          </main>\n        </div>\n      </Router>\n    );\n  }\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}